{"version":3,"sources":["Components/WorkSection.js","Components/Work.js","Components/EducationSection.js","Components/Education.js","Components/Experience.js","Components/Header.js","Components/SidebarSection.js","Components/Sidebar.js","App.js","index.js"],"names":["WorkSection","props","className","edit","htmlFor","type","id","value","jobTitle","onChange","handleChange","name","startDate","endDate","company","location","description","onClick","toggleEdit","map","bullet","index","deleteSection","Work","useState","workSections","setworkSections","e","section","indexOf","target","slice","split","field","updatedSections","preventDefault","length","uniqid","EducationSection","degreeType","university","finalGrade","Education","educationSections","seteducationSections","Experience","Header","setEdit","key","inputs","setInputs","input","updatedInputs","SidebarSection","title","bullets","Sidebar","sections","setSections","App","preview","setPreview","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eca34778.chunk.js","sourcesContent":["export const WorkSection = (props) => {\n  return (\n    <article className=\"work__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"jobTitle\">job title</label>\n          <input\n            type=\"text\"\n            id=\"jobTitle\"\n            value={props.jobTitle}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"startDate\">start date</label>\n          <input\n            type=\"text\"\n            id=\"startDate\"\n            value={props.startDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"endDate\">end date</label>\n          <input\n            type=\"text\"\n            id=\"endDate\"\n            value={props.endDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"company\">company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            value={props.company}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"location\">location</label>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={props.location}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"description\">\n            accomplishments and responsibilities, separated by commas\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={props.description}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h3>\n            {props.jobTitle}, {props.startDate} - {props.endDate}\n          </h3>\n          <p>\n            {props.company}, {props.location}\n          </p>\n          <ul>\n            {props.description.map((bullet, index) => (\n              <li key={index + 1}>{bullet}</li>\n            ))}\n          </ul>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React, { useState } from \"react\";\nimport { WorkSection } from \"./WorkSection\";\nimport uniqid from \"uniqid\";\n\nexport const Work = () => {\n  const [workSections, setworkSections] = useState([]);\n\n  const deleteSection = (e) => {\n    const index = workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    setworkSections([\n      ...workSections.slice(0, index),\n      ...workSections.slice(index + 1),\n    ]);\n  };\n\n  const addSection = () => {\n    setworkSections([\n      ...workSections,\n      {\n        edit: true,\n        jobTitle: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        company: \"\",\n        location: \"\",\n        description: [],\n        name: uniqid(),\n      },\n    ]);\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value;\n    if (e.target.id === \"description\") {\n      value = value.split(\",\");\n    }\n    const index = workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = [...workSections];\n    updatedSections[index][field] = value;\n    setworkSections(updatedSections);\n  };\n\n  const toggleEdit = (e) => {\n    e.preventDefault();\n    const index = workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = [...workSections];\n    updatedSections[index].edit = !updatedSections[index].edit;\n    setworkSections(updatedSections);\n  };\n\n  return (\n    <section className=\"work\">\n      <h2>Professional Experience</h2>\n      {workSections.length === 0 && (\n        <p className=\"description\">\n          <em>Here's where you add your work experience</em>\n        </p>\n      )}\n      {workSections.map((section) => (\n        <WorkSection\n          edit={section.edit}\n          jobTitle={section.jobTitle}\n          startDate={section.startDate}\n          endDate={section.endDate}\n          company={section.company}\n          location={section.location}\n          description={section.description}\n          handleChange={handleChange}\n          toggleEdit={toggleEdit}\n          name={section.name}\n          deleteSection={deleteSection}\n          key={section.name}\n        />\n      ))}\n      <button className=\"button--add\" onClick={addSection}>\n        Add Section\n      </button>\n    </section>\n  );\n};\n","export const EducationSection = (props) => {\n  return (\n    <article className=\"education__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"degreeType\">name of certificate</label>\n          <input\n            type=\"text\"\n            id=\"degreeType\"\n            value={props.degreeType}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"startDate\">start date</label>\n          <input\n            type=\"text\"\n            id=\"startDate\"\n            value={props.startDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"endDate\">end date</label>\n          <input\n            type=\"text\"\n            id=\"endDate\"\n            value={props.endDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"university\">university</label>\n          <input\n            type=\"text\"\n            id=\"university\"\n            value={props.university}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"location\">location</label>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={props.location}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"finalGrade\">\n            final grade or degree classification\n          </label>\n          <input\n            type=\"text\"\n            id=\"finalGrade\"\n            value={props.finalGrade}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h3>\n            {props.degreeType}, {props.startDate} - {props.endDate}\n          </h3>\n          <p>\n            {props.university}, {props.location}\n          </p>\n          <p>Final Grade: {props.finalGrade}</p>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React, { useState } from \"react\";\nimport { EducationSection } from \"./EducationSection\";\nimport uniqid from \"uniqid\";\n\nexport const Education = () => {\n  const [educationSections, seteducationSections] = useState([]);\n\n  const deleteSection = (e) => {\n    const index = educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    seteducationSections([\n      ...educationSections.slice(0, index),\n      ...educationSections.slice(index + 1),\n    ]);\n  };\n\n  const addSection = () => {\n    seteducationSections([\n      ...educationSections,\n      {\n        edit: true,\n        degreeType: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        university: \"\",\n        location: \"\",\n        finalGrade: \"\",\n        name: uniqid(),\n      },\n    ]);\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value;\n    const index = educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = [...educationSections];\n    updatedSections[index][field] = value;\n    seteducationSections(updatedSections);\n  };\n\n  const toggleEdit = (e) => {\n    e.preventDefault();\n    const index = educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = [...educationSections];\n    updatedSections[index].edit = !updatedSections[index].edit;\n    seteducationSections(updatedSections);\n  };\n\n  return (\n    <section className=\"education\">\n      <h2>Education</h2>\n      {educationSections.length === 0 && (\n        <p className=\"description\">\n          <em>Here's where you add your educational background</em>\n        </p>\n      )}\n      {educationSections.map((section) => (\n        <EducationSection\n          edit={section.edit}\n          degreeType={section.degreeType}\n          startDate={section.startDate}\n          endDate={section.endDate}\n          university={section.university}\n          location={section.location}\n          finalGrade={section.finalGrade}\n          handleChange={handleChange}\n          toggleEdit={toggleEdit}\n          name={section.name}\n          deleteSection={deleteSection}\n          key={section.name}\n        />\n      ))}\n      <button className=\"button--add\" onClick={addSection}>\n        Add Section\n      </button>\n    </section>\n  );\n};\n","import { Work } from \"./Work\";\nimport { Education } from \"./Education\";\n\nexport const Experience = (props) => {\n  return (\n    <main className=\"experience\">\n      <Work />\n      <Education />\n    </main>\n  );\n};\n","import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nexport const Header = () => {\n  const [edit, setEdit] = useState(true);\n  const [inputs, setInputs] = useState([\n    {\n      type: \"text\",\n      id: \"name\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"email\",\n      id: \"email\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"tel\",\n      id: \"phone\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"text\",\n      id: \"street\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"text\",\n      id: \"city\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"number\",\n      id: \"zip\",\n      value: \"\",\n      key: uniqid(),\n    },\n    {\n      type: \"text\",\n      id: \"country\",\n      value: \"\",\n      key: uniqid(),\n    },\n  ]);\n\n  const handleChange = (e) => {\n    const index = inputs.map((input) => input.id).indexOf(e.target.id);\n    let updatedInputs = [...inputs];\n    updatedInputs[index].value = e.target.value;\n    setInputs(updatedInputs);\n  };\n\n  const toggleEdit = (e) => {\n    e.preventDefault();\n    setEdit(!edit);\n  };\n\n  return (\n    <header className=\"header\">\n      {edit && (\n        <form className=\"header__form\">\n          {inputs.map((input) => (\n            <div key={input.key} className=\"form__input\">\n              <label htmlFor={input.id}>{input.id}</label>\n              <input\n                id={input.id}\n                type={input.type}\n                value={input.value}\n                onChange={handleChange}\n              />\n            </div>\n          ))}\n          <button className=\"button--edit\" onClick={toggleEdit}>\n            submit\n          </button>\n        </form>\n      )}\n      {!edit && (\n        <div className=\"header__display\">\n          <h1>{inputs[0].value}</h1>\n          {inputs.slice(1).map((input) => (\n            <p key={input.key}>{input.value}</p>\n          ))}\n          <button className=\"button--edit\" onClick={toggleEdit}>\n            Edit\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n","export const SidebarSection = (props) => {\n  return (\n    <article className=\"sidebar__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"title\">section title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={props.title}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"bullets\">bullet points, separated by commas</label>\n          <input\n            type=\"text\"\n            id=\"bullets\"\n            value={props.bullets}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h2>{props.title}</h2>\n          <ul>\n            {props.bullets.map((bullet, index) => (\n              <li key={index + 1}>{bullet}</li>\n            ))}\n          </ul>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React, { useState } from \"react\";\nimport { SidebarSection } from \"./SidebarSection\";\nimport uniqid from \"uniqid\";\n\nexport const Sidebar = (props) => {\n  const [sections, setSections] = useState([]);\n\n  const deleteSection = (e) => {\n    const index = sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    setSections([...sections.slice(0, index), ...sections.slice(index + 1)]);\n  };\n\n  const addSection = () => {\n    setSections([\n      ...sections,\n      {\n        edit: true,\n        title: \"\",\n        bullets: [],\n        name: uniqid(),\n      },\n    ]);\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value;\n    if (e.target.id === \"bullets\") {\n      value = value.split(\",\");\n    }\n    const index = sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = [...sections];\n    updatedSections[index][field] = value;\n    setSections(updatedSections);\n  };\n\n  const toggleEdit = (e) => {\n    e.preventDefault();\n    const index = sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = [...sections];\n    updatedSections[index].edit = !updatedSections[index].edit;\n    setSections(updatedSections);\n  };\n\n  return (\n    <aside className=\"sidebar\">\n      {sections.length === 0 && (\n        <p className=\"description\">\n          <em>\n            Sidebar -- Add any extra relevant information here, including skills\n          </em>\n        </p>\n      )}\n      {sections.map((section) => (\n        <SidebarSection\n          edit={section.edit}\n          title={section.title}\n          bullets={section.bullets}\n          handleChange={handleChange}\n          toggleEdit={toggleEdit}\n          name={section.name}\n          deleteSection={deleteSection}\n          key={section.name}\n        />\n      ))}\n      <button className=\"button--add\" onClick={addSection}>\n        Add Section\n      </button>\n    </aside>\n  );\n};\n","import \"./App.scss\";\nimport { Experience } from \"./Components/Experience\";\nimport { Header } from \"./Components/Header\";\nimport { Sidebar } from \"./Components/Sidebar\";\nimport React, { useState } from \"react\";\n\nconst App = () => {\n  const [preview, setPreview] = useState(false);\n\n  const toggleMode = () => {\n    setPreview(!preview);\n  };\n\n  return (\n    <div className={`App ${preview ? \"resume--preview\" : \"resume--edit\"}`}>\n      <div className=\"App__title\">Resume Builder</div>\n      <Header />\n      <Sidebar />\n      <Experience />\n      <button className=\"button--mode\" onClick={toggleMode}>\n        {preview ? \"Edit Mode\" : \"Preview Mode\"}\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}