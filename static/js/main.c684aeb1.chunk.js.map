{"version":3,"sources":["Components/WorkSection.js","Components/Work.js","Components/EducationSection.js","Components/Education.js","Components/Experience.js","Components/Header.js","Components/SidebarSection.js","Components/Sidebar.js","App.js","index.js"],"names":["WorkSection","props","className","edit","htmlFor","type","id","value","jobTitle","onChange","handleChange","name","startDate","endDate","company","location","description","onClick","toggleEdit","map","bullet","index","deleteSection","Work","state","workSections","bind","addSection","e","this","section","indexOf","target","updatedSections","Object","assign","splice","setState","push","uniqid","split","field","preventDefault","length","React","Component","EducationSection","degreeType","university","finalGrade","Education","educationSections","Experience","Header","inputs","key","input","updatedInputs","slice","SidebarSection","title","bullets","Sidebar","sections","App","preview","toggleMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAaA,EAAc,SAACC,GAC1B,OACE,0BAASC,UAAU,gBAAnB,UACGD,EAAME,MACL,uBAAMD,UAAU,gBAAhB,UACE,uBAAOE,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLC,GAAG,WACHC,MAAON,EAAMO,SACbC,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLC,GAAG,YACHC,MAAON,EAAMW,UACbH,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLC,GAAG,UACHC,MAAON,EAAMY,QACbJ,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,UAAf,qBACA,uBACEC,KAAK,OACLC,GAAG,UACHC,MAAON,EAAMa,QACbL,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,GAAG,WACHC,MAAON,EAAMc,SACbN,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,cAAf,uEAGA,uBACEC,KAAK,OACLC,GAAG,cACHC,MAAON,EAAMe,YACbP,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAGd,wBACET,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,wBASFjB,EAAME,MACN,sBAAKD,UAAU,mBAAf,UACE,+BACGD,EAAMO,SADT,KACqBP,EAAMW,UAD3B,MACyCX,EAAMY,WAE/C,8BACGZ,EAAMa,QADT,KACoBb,EAAMc,YAE1B,6BACGd,EAAMe,YAAYG,KAAI,SAACC,EAAQC,GAAT,OACrB,6BAAqBD,GAAZC,EAAQ,QAIrB,wBACEnB,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,qBASJ,wBACEhB,UAAU,iBACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMqB,cAHjB,wB,gBCpFOC,EAAb,kDACE,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXC,aAAc,IAEhB,EAAKf,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKJ,cAAgB,EAAKA,cAAcI,KAAnB,gBARJ,EADrB,iDAWE,SAAcE,GACZ,IAAMP,EAAQQ,KAAKL,MAAMC,aACtBN,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBR,aAAaW,OAAOf,EAAO,GAE3CQ,KAAKQ,SAAS,CACZJ,sBApBN,wBAwBE,WACE,IAAIA,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBR,aAAaa,KAAK,CAChCnC,MAAM,EACNK,SAAU,GACVI,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbL,KAAM4B,QAERV,KAAKQ,SAAS,CACZJ,sBArCN,0BAyCE,SAAaL,GACX,IAAIrB,EAAQqB,EAAEI,OAAOzB,MACD,gBAAhBqB,EAAEI,OAAO1B,KACXC,EAAQA,EAAMiC,MAAM,MAEtB,IAAMnB,EAAQQ,KAAKL,MAAMC,aACtBN,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MACd8B,EAAQb,EAAEI,OAAO1B,GACnB2B,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBR,aAAaJ,GAAOoB,GAASlC,EAC7CsB,KAAKQ,SAAS,CACZJ,sBArDN,wBAyDE,SAAWL,GACTA,EAAEc,iBACF,IAAMrB,EAAQQ,KAAKL,MAAMC,aACtBN,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBR,aAAaJ,GAAOlB,MACjC8B,EAAgBR,aAAaJ,GAAOlB,KACvC0B,KAAKQ,SAAS,CACZJ,sBAnEN,oBAsEE,WAAU,IAAD,OACP,OACE,0BAAS/B,UAAU,OAAnB,UACE,yDACoC,IAAnC2B,KAAKL,MAAMC,aAAakB,QACvB,mBAAGzC,UAAU,cAAb,SACE,6EAGH2B,KAAKL,MAAMC,aAAaN,KAAI,SAACW,GAAD,OAC3B,cAAC,EAAD,CACE3B,KAAM2B,EAAQ3B,KACdK,SAAUsB,EAAQtB,SAClBI,UAAWkB,EAAQlB,UACnBC,QAASiB,EAAQjB,QACjBC,QAASgB,EAAQhB,QACjBC,SAAUe,EAAQf,SAClBC,YAAac,EAAQd,YACrBN,aAAc,EAAKA,aACnBQ,WAAY,EAAKA,WACjBP,KAAMmB,EAAQnB,KACdW,cAAe,EAAKA,eACfQ,EAAQnB,SAGjB,wBAAQT,UAAU,cAAce,QAASY,KAAKF,WAA9C,gCA/FR,GAA0BiB,IAAMC,WCJnBC,EAAmB,SAAC7C,GAC/B,OACE,0BAASC,UAAU,qBAAnB,UACGD,EAAME,MACL,uBAAMD,UAAU,gBAAhB,UACE,uBAAOE,QAAQ,aAAf,iCACA,uBACEC,KAAK,OACLC,GAAG,aACHC,MAAON,EAAM8C,WACbtC,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,YAAf,wBACA,uBACEC,KAAK,OACLC,GAAG,YACHC,MAAON,EAAMW,UACbH,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,UAAf,sBACA,uBACEC,KAAK,OACLC,GAAG,UACHC,MAAON,EAAMY,QACbJ,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,aAAf,wBACA,uBACEC,KAAK,OACLC,GAAG,aACHC,MAAON,EAAM+C,WACbvC,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,WAAf,sBACA,uBACEC,KAAK,OACLC,GAAG,WACHC,MAAON,EAAMc,SACbN,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,aAAf,kDAGA,uBACEC,KAAK,OACLC,GAAG,aACHC,MAAON,EAAMgD,WACbxC,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAGd,wBACET,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,wBASFjB,EAAME,MACN,sBAAKD,UAAU,mBAAf,UACE,+BACGD,EAAM8C,WADT,KACuB9C,EAAMW,UAD7B,MAC2CX,EAAMY,WAEjD,8BACGZ,EAAM+C,WADT,KACuB/C,EAAMc,YAE7B,8CAAiBd,EAAMgD,cAEvB,wBACE/C,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,qBASJ,wBACEhB,UAAU,iBACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMqB,cAHjB,wBChFO4B,EAAb,kDACE,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACX2B,kBAAmB,IAErB,EAAKzC,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKJ,cAAgB,EAAKA,cAAcI,KAAnB,gBARJ,EADrB,iDAWE,SAAcE,GACZ,IAAMP,EAAQQ,KAAKL,MAAM2B,kBACtBhC,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBkB,kBAAkBf,OAAOf,EAAO,GAEhDQ,KAAKQ,SAAS,CACZJ,sBApBN,wBAwBE,WACE,IAAIA,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBkB,kBAAkBb,KAAK,CACrCnC,MAAM,EACN4C,WAAY,GACZnC,UAAW,GACXC,QAAS,GACTmC,WAAY,GACZjC,SAAU,GACVkC,WAAY,GACZtC,KAAM4B,QAERV,KAAKQ,SAAS,CACZJ,sBArCN,0BAyCE,SAAaL,GACX,IAAIrB,EAAQqB,EAAEI,OAAOzB,MACfc,EAAQQ,KAAKL,MAAM2B,kBACtBhC,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MACd8B,EAAQb,EAAEI,OAAO1B,GACnB2B,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBkB,kBAAkB9B,GAAOoB,GAASlC,EAClDsB,KAAKQ,SAAS,CACZJ,sBAlDN,wBAsDE,SAAWL,GACTA,EAAEc,iBACF,IAAMrB,EAAQQ,KAAKL,MAAM2B,kBACtBhC,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgBkB,kBAAkB9B,GAAOlB,MACtC8B,EAAgBkB,kBAAkB9B,GAAOlB,KAC5C0B,KAAKQ,SAAS,CACZJ,sBAhEN,oBAmEE,WAAU,IAAD,OACP,OACE,0BAAS/B,UAAU,YAAnB,UACE,2CACyC,IAAxC2B,KAAKL,MAAM2B,kBAAkBR,QAC5B,mBAAGzC,UAAU,cAAb,SACE,oFAGH2B,KAAKL,MAAM2B,kBAAkBhC,KAAI,SAACW,GAAD,OAChC,cAAC,EAAD,CACE3B,KAAM2B,EAAQ3B,KACd4C,WAAYjB,EAAQiB,WACpBnC,UAAWkB,EAAQlB,UACnBC,QAASiB,EAAQjB,QACjBmC,WAAYlB,EAAQkB,WACpBjC,SAAUe,EAAQf,SAClBkC,WAAYnB,EAAQmB,WACpBvC,aAAc,EAAKA,aACnBQ,WAAY,EAAKA,WACjBP,KAAMmB,EAAQnB,KACdW,cAAe,EAAKA,eACfQ,EAAQnB,SAGjB,wBAAQT,UAAU,cAAce,QAASY,KAAKF,WAA9C,gCA5FR,GAA+BiB,IAAMC,WCDxBO,EAAa,SAACnD,GACzB,OACE,uBAAMC,UAAU,aAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLOmD,EAAb,kDACE,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXrB,MAAM,EACNmD,OAAQ,CACN,CACEjD,KAAM,OACNC,GAAI,OACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,QACNC,GAAI,QACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,MACNC,GAAI,QACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,OACNC,GAAI,SACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,OACNC,GAAI,OACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,SACNC,GAAI,MACJC,MAAO,GACPgD,IAAKhB,OAEP,CACElC,KAAM,OACNC,GAAI,UACJC,MAAO,GACPgD,IAAKhB,SAKX,EAAK7B,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAnDD,EADrB,gDAsDE,SAAaE,GACX,IAAMP,EAAQQ,KAAKL,MAAM8B,OACtBnC,KAAI,SAACqC,GAAD,OAAWA,EAAMlD,MACrByB,QAAQH,EAAEI,OAAO1B,IAChBmD,EAAgBvB,OAAOC,OAAO,GAAIN,KAAKL,OAC3CiC,EAAcH,OAAOjC,GAAOd,MAAQqB,EAAEI,OAAOzB,MAC7CsB,KAAKQ,SAAS,CACZoB,oBA7DN,wBAiEE,SAAW7B,GACTA,EAAEc,iBACFb,KAAKQ,UAAS,SAACb,GAAD,MAAY,CACxBrB,MAAOqB,EAAMrB,WApEnB,oBAwEE,WAAU,IAAD,OACP,OACE,yBAAQD,UAAU,SAAlB,UACG2B,KAAKL,MAAMrB,MACV,uBAAMD,UAAU,eAAhB,UACG2B,KAAKL,MAAM8B,OAAOnC,KAAI,SAACqC,GAAD,OACrB,sBAAqBtD,UAAU,cAA/B,UACE,uBAAOE,QAASoD,EAAMlD,GAAtB,SAA2BkD,EAAMlD,KACjC,uBACEA,GAAIkD,EAAMlD,GACVD,KAAMmD,EAAMnD,KACZE,MAAOiD,EAAMjD,MACbE,SAAU,EAAKC,iBANT8C,EAAMD,QAUlB,wBAAQrD,UAAU,eAAee,QAASY,KAAKX,WAA/C,wBAKFW,KAAKL,MAAMrB,MACX,sBAAKD,UAAU,kBAAf,UACE,6BAAK2B,KAAKL,MAAM8B,OAAO,GAAG/C,QACzBsB,KAAKL,MAAM8B,OAAOI,MAAM,GAAGvC,KAAI,SAACqC,GAAD,OAC9B,4BAAoBA,EAAMjD,OAAlBiD,EAAMD,QAEhB,wBAAQrD,UAAU,eAAee,QAASY,KAAKX,WAA/C,4BAnGZ,GAA4B0B,IAAMC,WCFrBc,EAAiB,SAAC1D,GAC7B,OACE,0BAASC,UAAU,mBAAnB,UACGD,EAAME,MACL,uBAAMD,UAAU,gBAAhB,UACE,uBAAOE,QAAQ,QAAf,2BACA,uBACEC,KAAK,OACLC,GAAG,QACHC,MAAON,EAAM2D,MACbnD,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAEd,uBAAOP,QAAQ,UAAf,gDACA,uBACEC,KAAK,OACLC,GAAG,UACHC,MAAON,EAAM4D,QACbpD,SAAUR,EAAMS,aAChBC,KAAMV,EAAMU,OAGd,wBACET,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,wBASFjB,EAAME,MACN,sBAAKD,UAAU,mBAAf,UACE,6BAAKD,EAAM2D,QACX,6BACG3D,EAAM4D,QAAQ1C,KAAI,SAACC,EAAQC,GAAT,OACjB,6BAAqBD,GAAZC,EAAQ,QAIrB,wBACEnB,UAAU,eACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMiB,WAHjB,qBASJ,wBACEhB,UAAU,iBACVS,KAAMV,EAAMU,KACZM,QAAShB,EAAMqB,cAHjB,wBC7COwC,EAAb,kDACE,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXuC,SAAU,IAEZ,EAAKrD,aAAe,EAAKA,aAAagB,KAAlB,gBACpB,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKJ,cAAgB,EAAKA,cAAcI,KAAnB,gBARJ,EADrB,iDAYE,SAAcE,GACZ,IAAMP,EAAQQ,KAAKL,MAAMuC,SACtB5C,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgB8B,SAAS3B,OAAOf,EAAO,GAEvCQ,KAAKQ,SAAS,CACZJ,sBArBN,wBAyBE,WACE,IAAIA,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgB8B,SAASzB,KAAK,CAC5BnC,MAAM,EACNyD,MAAO,GACPC,QAAS,GACTlD,KAAM4B,QAERV,KAAKQ,SAAS,CACZJ,sBAlCN,0BAsCE,SAAaL,GACX,IAAIrB,EAAQqB,EAAEI,OAAOzB,MACD,YAAhBqB,EAAEI,OAAO1B,KACXC,EAAQA,EAAMiC,MAAM,MAEtB,IAAMnB,EAAQQ,KAAKL,MAAMuC,SACtB5C,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MACd8B,EAAQb,EAAEI,OAAO1B,GACnB2B,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgB8B,SAAS1C,GAAOoB,GAASlC,EACzCsB,KAAKQ,SAAS,CACZJ,sBAlDN,wBAsDE,SAAWL,GACTA,EAAEc,iBACF,IAAMrB,EAAQQ,KAAKL,MAAMuC,SACtB5C,KAAI,SAACW,GAAD,OAAaA,EAAQnB,QACzBoB,QAAQH,EAAEI,OAAOrB,MAEhBsB,EAAkBC,OAAOC,OAAO,GAAIN,KAAKL,OAC7CS,EAAgB8B,SAAS1C,GAAOlB,MAC7B8B,EAAgB8B,SAAS1C,GAAOlB,KACnC0B,KAAKQ,SAAS,CACZJ,sBAhEN,oBAmEE,WAAU,IAAD,OACP,OACE,wBAAO/B,UAAU,UAAjB,UACkC,IAA/B2B,KAAKL,MAAMuC,SAASpB,QACnB,mBAAGzC,UAAU,cAAb,SACE,wGAMH2B,KAAKL,MAAMuC,SAAS5C,KAAI,SAACW,GAAD,OACvB,cAAC,EAAD,CACE3B,KAAM2B,EAAQ3B,KACdyD,MAAO9B,EAAQ8B,MACfC,QAAS/B,EAAQ+B,QACjBnD,aAAc,EAAKA,aACnBQ,WAAY,EAAKA,WACjBP,KAAMmB,EAAQnB,KACdW,cAAe,EAAKA,eACfQ,EAAQnB,SAGjB,wBAAQT,UAAU,cAAce,QAASY,KAAKF,WAA9C,gCA1FR,GAA6BiB,IAAMC,WCkCpBmB,E,kDA/Bb,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,CACXyC,SAAS,GAEX,EAAKC,WAAa,EAAKA,WAAWxC,KAAhB,gBALD,E,8CAOnB,WACEG,KAAKQ,SAAS,CACZ4B,SAAUpC,KAAKL,MAAMyC,Y,oBAGzB,WACE,OACE,sBACE/D,UAAS,cACP2B,KAAKL,MAAMyC,QAAU,kBAAoB,gBAF7C,UAKE,qBAAK/D,UAAU,aAAf,4BACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,wBAAQA,UAAU,eAAee,QAASY,KAAKqC,WAA/C,SACGrC,KAAKL,MAAMyC,QAAU,YAAc,wB,GAzB5BrB,IAAMC,WCAxBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c684aeb1.chunk.js","sourcesContent":["export const WorkSection = (props) => {\n  return (\n    <article className=\"work__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"jobTitle\">job title</label>\n          <input\n            type=\"text\"\n            id=\"jobTitle\"\n            value={props.jobTitle}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"startDate\">start date</label>\n          <input\n            type=\"text\"\n            id=\"startDate\"\n            value={props.startDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"endDate\">end date</label>\n          <input\n            type=\"text\"\n            id=\"endDate\"\n            value={props.endDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"company\">company</label>\n          <input\n            type=\"text\"\n            id=\"company\"\n            value={props.company}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"location\">location</label>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={props.location}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"description\">\n            accomplishments and responsibilities, separated by commas\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            value={props.description}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h3>\n            {props.jobTitle}, {props.startDate} - {props.endDate}\n          </h3>\n          <p>\n            {props.company}, {props.location}\n          </p>\n          <ul>\n            {props.description.map((bullet, index) => (\n              <li key={index + 1}>{bullet}</li>\n            ))}\n          </ul>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React from \"react\";\nimport { WorkSection } from \"./WorkSection\";\nimport uniqid from \"uniqid\";\n\nexport class Work extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      workSections: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.addSection = this.addSection.bind(this);\n    this.deleteSection = this.deleteSection.bind(this);\n  }\n  deleteSection(e) {\n    const index = this.state.workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.workSections.splice(index, 1);\n\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  addSection() {\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.workSections.push({\n      edit: true,\n      jobTitle: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      company: \"\",\n      location: \"\",\n      description: [],\n      name: uniqid(),\n    });\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  handleChange(e) {\n    let value = e.target.value;\n    if (e.target.id === \"description\") {\n      value = value.split(\",\");\n    }\n    const index = this.state.workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.workSections[index][field] = value;\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  toggleEdit(e) {\n    e.preventDefault();\n    const index = this.state.workSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.workSections[index].edit =\n      !updatedSections.workSections[index].edit;\n    this.setState({\n      updatedSections,\n    });\n  }\n  render() {\n    return (\n      <section className=\"work\">\n        <h2>Professional Experience</h2>\n        {this.state.workSections.length === 0 && (\n          <p className=\"description\">\n            <em>Here's where you add your work experience</em>\n          </p>\n        )}\n        {this.state.workSections.map((section) => (\n          <WorkSection\n            edit={section.edit}\n            jobTitle={section.jobTitle}\n            startDate={section.startDate}\n            endDate={section.endDate}\n            company={section.company}\n            location={section.location}\n            description={section.description}\n            handleChange={this.handleChange}\n            toggleEdit={this.toggleEdit}\n            name={section.name}\n            deleteSection={this.deleteSection}\n            key={section.name}\n          />\n        ))}\n        <button className=\"button--add\" onClick={this.addSection}>\n          Add Section\n        </button>\n      </section>\n    );\n  }\n}\n","export const EducationSection = (props) => {\n  return (\n    <article className=\"education__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"degreeType\">name of certificate</label>\n          <input\n            type=\"text\"\n            id=\"degreeType\"\n            value={props.degreeType}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"startDate\">start date</label>\n          <input\n            type=\"text\"\n            id=\"startDate\"\n            value={props.startDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"endDate\">end date</label>\n          <input\n            type=\"text\"\n            id=\"endDate\"\n            value={props.endDate}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"university\">university</label>\n          <input\n            type=\"text\"\n            id=\"university\"\n            value={props.university}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"location\">location</label>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={props.location}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"finalGrade\">\n            final grade or degree classification\n          </label>\n          <input\n            type=\"text\"\n            id=\"finalGrade\"\n            value={props.finalGrade}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h3>\n            {props.degreeType}, {props.startDate} - {props.endDate}\n          </h3>\n          <p>\n            {props.university}, {props.location}\n          </p>\n          <p>Final Grade: {props.finalGrade}</p>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React from \"react\";\nimport { EducationSection } from \"./EducationSection\";\nimport uniqid from \"uniqid\";\n\nexport class Education extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      educationSections: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.addSection = this.addSection.bind(this);\n    this.deleteSection = this.deleteSection.bind(this);\n  }\n  deleteSection(e) {\n    const index = this.state.educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.educationSections.splice(index, 1);\n\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  addSection() {\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.educationSections.push({\n      edit: true,\n      degreeType: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      university: \"\",\n      location: \"\",\n      finalGrade: \"\",\n      name: uniqid(),\n    });\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  handleChange(e) {\n    let value = e.target.value;\n    const index = this.state.educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.educationSections[index][field] = value;\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  toggleEdit(e) {\n    e.preventDefault();\n    const index = this.state.educationSections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.educationSections[index].edit =\n      !updatedSections.educationSections[index].edit;\n    this.setState({\n      updatedSections,\n    });\n  }\n  render() {\n    return (\n      <section className=\"education\">\n        <h2>Education</h2>\n        {this.state.educationSections.length === 0 && (\n          <p className=\"description\">\n            <em>Here's where you add your educational background</em>\n          </p>\n        )}\n        {this.state.educationSections.map((section) => (\n          <EducationSection\n            edit={section.edit}\n            degreeType={section.degreeType}\n            startDate={section.startDate}\n            endDate={section.endDate}\n            university={section.university}\n            location={section.location}\n            finalGrade={section.finalGrade}\n            handleChange={this.handleChange}\n            toggleEdit={this.toggleEdit}\n            name={section.name}\n            deleteSection={this.deleteSection}\n            key={section.name}\n          />\n        ))}\n        <button className=\"button--add\" onClick={this.addSection}>\n          Add Section\n        </button>\n      </section>\n    );\n  }\n}\n","import { Work } from \"./Work\";\nimport { Education } from \"./Education\";\n\nexport const Experience = (props) => {\n  return (\n    <main className=\"experience\">\n      <Work />\n      <Education />\n    </main>\n  );\n};\n","import React from \"react\";\nimport uniqid from \"uniqid\";\nexport class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: true,\n      inputs: [\n        {\n          type: \"text\",\n          id: \"name\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"email\",\n          id: \"email\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"tel\",\n          id: \"phone\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"text\",\n          id: \"street\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"text\",\n          id: \"city\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"number\",\n          id: \"zip\",\n          value: \"\",\n          key: uniqid(),\n        },\n        {\n          type: \"text\",\n          id: \"country\",\n          value: \"\",\n          key: uniqid(),\n        },\n      ],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n  handleChange(e) {\n    const index = this.state.inputs\n      .map((input) => input.id)\n      .indexOf(e.target.id);\n    let updatedInputs = Object.assign({}, this.state);\n    updatedInputs.inputs[index].value = e.target.value;\n    this.setState({\n      updatedInputs,\n    });\n  }\n\n  toggleEdit(e) {\n    e.preventDefault();\n    this.setState((state) => ({\n      edit: !state.edit,\n    }));\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        {this.state.edit && (\n          <form className=\"header__form\">\n            {this.state.inputs.map((input) => (\n              <div key={input.key} className=\"form__input\">\n                <label htmlFor={input.id}>{input.id}</label>\n                <input\n                  id={input.id}\n                  type={input.type}\n                  value={input.value}\n                  onChange={this.handleChange}\n                />\n              </div>\n            ))}\n            <button className=\"button--edit\" onClick={this.toggleEdit}>\n              submit\n            </button>\n          </form>\n        )}\n        {!this.state.edit && (\n          <div className=\"header__display\">\n            <h1>{this.state.inputs[0].value}</h1>\n            {this.state.inputs.slice(1).map((input) => (\n              <p key={input.key}>{input.value}</p>\n            ))}\n            <button className=\"button--edit\" onClick={this.toggleEdit}>\n              Edit\n            </button>\n          </div>\n        )}\n      </header>\n    );\n  }\n}\n","export const SidebarSection = (props) => {\n  return (\n    <article className=\"sidebar__section\">\n      {props.edit && (\n        <form className=\"section__form\">\n          <label htmlFor=\"title\">section title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={props.title}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n          <label htmlFor=\"bullets\">bullet points, separated by commas</label>\n          <input\n            type=\"text\"\n            id=\"bullets\"\n            value={props.bullets}\n            onChange={props.handleChange}\n            name={props.name}\n          />\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            submit\n          </button>\n        </form>\n      )}\n      {!props.edit && (\n        <div className=\"section__display\">\n          <h2>{props.title}</h2>\n          <ul>\n            {props.bullets.map((bullet, index) => (\n              <li key={index + 1}>{bullet}</li>\n            ))}\n          </ul>\n\n          <button\n            className=\"button--edit\"\n            name={props.name}\n            onClick={props.toggleEdit}\n          >\n            edit\n          </button>\n        </div>\n      )}\n      <button\n        className=\"button--delete\"\n        name={props.name}\n        onClick={props.deleteSection}\n      >\n        delete\n      </button>\n    </article>\n  );\n};\n","import React from \"react\";\nimport { SidebarSection } from \"./SidebarSection\";\nimport uniqid from \"uniqid\";\n\nexport class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sections: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.addSection = this.addSection.bind(this);\n    this.deleteSection = this.deleteSection.bind(this);\n  }\n\n  deleteSection(e) {\n    const index = this.state.sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.sections.splice(index, 1);\n\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  addSection() {\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.sections.push({\n      edit: true,\n      title: \"\",\n      bullets: [],\n      name: uniqid(),\n    });\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  handleChange(e) {\n    let value = e.target.value;\n    if (e.target.id === \"bullets\") {\n      value = value.split(\",\");\n    }\n    const index = this.state.sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n    const field = e.target.id;\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.sections[index][field] = value;\n    this.setState({\n      updatedSections,\n    });\n  }\n\n  toggleEdit(e) {\n    e.preventDefault();\n    const index = this.state.sections\n      .map((section) => section.name)\n      .indexOf(e.target.name);\n\n    let updatedSections = Object.assign({}, this.state);\n    updatedSections.sections[index].edit =\n      !updatedSections.sections[index].edit;\n    this.setState({\n      updatedSections,\n    });\n  }\n  render() {\n    return (\n      <aside className=\"sidebar\">\n        {this.state.sections.length === 0 && (\n          <p className=\"description\">\n            <em>\n              Sidebar -- Add any extra relevant information here, including\n              skills\n            </em>\n          </p>\n        )}\n        {this.state.sections.map((section) => (\n          <SidebarSection\n            edit={section.edit}\n            title={section.title}\n            bullets={section.bullets}\n            handleChange={this.handleChange}\n            toggleEdit={this.toggleEdit}\n            name={section.name}\n            deleteSection={this.deleteSection}\n            key={section.name}\n          />\n        ))}\n        <button className=\"button--add\" onClick={this.addSection}>\n          Add Section\n        </button>\n      </aside>\n    );\n  }\n}\n","import \"./App.scss\";\nimport { Experience } from \"./Components/Experience\";\nimport { Header } from \"./Components/Header\";\nimport { Sidebar } from \"./Components/Sidebar\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preview: false,\n    };\n    this.toggleMode = this.toggleMode.bind(this);\n  }\n  toggleMode() {\n    this.setState({\n      preview: !this.state.preview,\n    });\n  }\n  render() {\n    return (\n      <div\n        className={`App ${\n          this.state.preview ? \"resume--preview\" : \"resume--edit\"\n        }`}\n      >\n        <div className=\"App__title\">Resume Builder</div>\n        <Header />\n        <Sidebar />\n        <Experience />\n        <button className=\"button--mode\" onClick={this.toggleMode}>\n          {this.state.preview ? \"Edit Mode\" : \"Preview Mode\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}